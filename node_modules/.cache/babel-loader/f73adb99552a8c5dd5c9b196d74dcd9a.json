{"ast":null,"code":"var _jsxFileName = \"/Users/gage/Code/SEI/labs/react-atm-lab/src/Account/index.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Account extends Component {\n  constructor() {\n    super();\n\n    this.depositMoney = () => {\n      let balance = this.state.balance + Number(this.state.textInput.current.value);\n      this.setState({\n        balance\n      });\n    };\n\n    this.withdrawMoney = () => {\n      let balance = this.state.balance - Number(this.state.textInput.current.value);\n      this.setState({\n        balance\n      });\n    };\n\n    this.state = {\n      balance: 0,\n      textInput: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.state.balance === 0 ? \"account zero\" : \"account\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [\"$\", this.state.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.state.textInput,\n        type: \"text\",\n        placeholder: \"enter an amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: this.depositMoney,\n        type: \"button\",\n        value: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: this.withdrawMoney,\n        type: \"button\",\n        value: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Account;","map":{"version":3,"sources":["/Users/gage/Code/SEI/labs/react-atm-lab/src/Account/index.js"],"names":["React","Component","Account","constructor","depositMoney","balance","state","Number","textInput","current","value","setState","withdrawMoney","createRef","render","props","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,GAAI;AACb;;AADa,SAOfC,YAPe,GAOA,MAAM;AACnB,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,GAAqBE,MAAM,CAAC,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,OAArB,CAA6BC,KAA9B,CAAzC;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KAZc;;AAAA,SAafO,aAbe,GAaC,MAAM;AACpB,UAAIP,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,GAAqBE,MAAM,CAAC,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,OAArB,CAA6BC,KAA9B,CAAzC;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KAlBc;;AAEb,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE,CADE;AAEXG,MAAAA,SAAS,eAAER,KAAK,CAACa,SAAN;AAFA,KAAb;AAID;;AAaDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWD,OAAX,KAAuB,CAAvB,GAA2B,cAA3B,GAA4C,SAA5D;AAAA,8BACE;AAAA,kBAAK,KAAKU,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,wBAA2B,KAAKV,KAAL,CAAWD,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWE,SAAvB;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,OAAO,EAAE,KAAKJ,YAArB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,OAAO,EAAE,KAAKQ,aAArB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9B6B;;AAgChC,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Account extends Component {\n  constructor () {\n    super()\n    this.state = {\n      balance: 0,\n      textInput: React.createRef()\n    }\n  }\n  depositMoney = () => {\n    let balance = this.state.balance + Number(this.state.textInput.current.value)\n    this.setState({\n      balance,\n    })\n  }\n  withdrawMoney = () => {\n    let balance = this.state.balance - Number(this.state.textInput.current.value)\n    this.setState({\n      balance,\n    })\n  }\n  render() {\n    return (\n      <div className={this.state.balance === 0 ? \"account zero\" : \"account\"}>\n        <h2>{this.props.name}</h2>\n        <div className=\"balance\">${this.state.balance}</div>\n        <input ref={this.state.textInput} type=\"text\" placeholder=\"enter an amount\" />\n        <input onClick={this.depositMoney} type=\"button\" value=\"Deposit\" />\n        <input onClick={this.withdrawMoney}type=\"button\" value=\"Withdraw\" />\n      </div>\n    )\n  }\n}\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}